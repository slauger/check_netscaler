/*
 *	service templates for check_netscaler.pl
 */

// this is only a basic template to enable perfdata
template Service "perf_enabled" {
	enable_perfdata = true
}

// Health Checks
template Service "netscaler_cpu_template" {
	import "generic-service"
	import "perf_enabled"

	check_command = "netscaler"

	vars.netscaler_command = "above"
	vars.netscaler_objecttype = "system"
	vars.netscaler_objectname = "cpuusagepcnt"

	vars.warning = 75
	vars.critical = 80
}

template Service "netscaler_mem_template" {
	import "generic-service"
	import "perf_enabled"

	check_command = "netscaler"

	vars.netscaler_command = "above"
	vars.netscaler_objecttype = "system"
	vars.netscaler_objectname = "memusagepcnt"

	vars.warning = 75
	vars.critical = 80
}

template Service "netscaler_mgmtcpu_template" {
	import "generic-service"
	import "perf_enabled"

	check_command = "netscaler"

	vars.netscaler_command = "above"
	vars.netscaler_objecttype = "system"
	vars.netscaler_objectname = "mgmtcpuusagepcnt"

	vars.warning = 75
	vars.critical = 80
}

template Service "netscaler_disk0_template" {
	import "generic-service"
	import "perf_enabled"

	check_command = "netscaler"

	vars.netscaler_command = "above"
	vars.netscaler_objecttype = "system"
	vars.netscaler_objectname = "disk0perusage"

	vars.warning = 75
	vars.critical = 80
}

template Service "netscaler_disk1_template" {
	import "generic-service"
	import "perf_enabled"

	check_command = "netscaler"

	vars.netscaler_command = "above"
	vars.netscaler_objecttype = "system"
	vars.netscaler_objectname = "disk1perusage"

	vars.warning = 75
	vars.critical = 80
}

// HA Status
template Service "netscaler_ha_status_template" {
	import "generic-service"

	check_command = "netscaler"

	vars.netscaler_command = "matches_not"
	vars.netscaler_objecttype = "hanode"
	vars.netscaler_objectname = "hacurstatus"

	vars.warning = "YES"
	vars.critical = "YES"
}

template Service "netscaler_ha_state_template" {
	import "generic-service"

	check_command = "netscaler"

	vars.netscaler_command = "matches_not"
	vars.netscaler_objecttype = "hanode"
	vars.netscaler_objectname = "hacurstate"

	vars.warning = "UP"
	vars.critical = "UP"
}

// Config Changes
template Service "netscaler_config_status_template" {
	import "generic-service"

	check_command = "netscaler"

	vars.netscaler_command = "nsconfig"
}

// Netscaler info
template Service "netscaler_hwinfo_template" {
	import "generic-service"
	
	check_command = "netscaler"

	vars.netscaler_command = "hwinfo"
}

// Interfaces status
template Service "netscaler_interfaces_template" {
	import "generic-service"
	import "perf_enabled"
	
	check_command = "netscaler"

	vars.netscaler_command = "interfaces"
}

// Server Status
template Service "netscaler_staserver_template" {
	import "generic-service"

	check_command = "netscaler"

	vars.netscaler_command = "staserver"
}

template Service "netscaler_server_template" {
	import "generic-service"

	check_command = "netscaler"

	vars.netscaler_command = "state"
	vars.netscaler_objecttype = "server"
}

template Service "netscaler_lbvserver_template" {
	import "generic-service"
	import "perf_enabled"
	
	check_command = "netscaler"

	vars.netscaler_command = "state"
	vars.netscaler_objecttype = "lbvserver"
}

template Service "netscaler_vpnvserver_template" {
	import "generic-service"
	import "perf_enabled"
	
	check_command = "netscaler"

	vars.netscaler_command = "state"
	vars.netscaler_objecttype = "vpnvserver"
}

// Servicegroup status
template Service "netscaler_servicegroup_template" {
	import "generic-service"
	import "perf_enabled"
	
	check_command = "netscaler"

	vars.netscaler_command = "servicegroup"
}

// Performancedata
template Service "netscaler_performancedata_template" {
	import "generic-service"
	import "perf_enabled"
	
	check_command = "netscaler"

	vars.netscaler_command = "performancedata"
}

// NTP status
template Service "netscaler_ntp_template" {
	import "generic-service"
	import "perf_enabled"

	check_command = "netscaler"

	vars.netscaler_command = "ntp"

	vars.warning = "o=0.03,j=100"
	vars.critical = "o=0.05,j=200"
}

// EOF
